课时7：
##################################软件开发的生命周期#########################################
要求：测试人员全程参与
需求调研——》需求分析评审——》软件架构设计——》编码——》单元测试——》集成测试——》系统测试——》预发布系统测试——》上线
 （测试人员从需求分析评审到最后上线全程参与）
测试人员要求开发人员写单元测试   覆盖整个系统的接口  （这个很重要，不然很容易被坑的.....）
把控整个流程的时间点、风险点。

自动化测试遇到的问题和困难有哪些？
比如： 接口文档不完善（更新了需求功能，不及时更新接口文档）
selenium的优点：开元，强大，兼容性好，可以写Python脚本来控制整个流程。


课时8：
###################################测试分类####################################################
黑盒测试（功能测试）：功能符合用户的需求。
白盒测试：了解里面的逻辑，验证符合用户的需求。
冒烟测试：主功能、主路径测试。
性能测试：模拟多种峰值和负载去测试各项性能指标（一般对接口做性能测试，一个网站最多能够接收多少请求）。
性能测试工具：jmeter，loadrunner
自动化测试：人工测试转为工具自动执行（没有谁取代谁，有些场景适合自动化测试，有些场景适合手工测试）

开发也会分为很多种：后端开发，前端开发，大数据开发， Java开发....


课时9：
#####################################自动化测试和手工测试的优缺点###############################
1.自动化测试方便，自动验证功能是否有问题
2.更好的利用资源，节约人力成本
3.覆盖更全，增加软件的稳定性

自动化测试和手工测试是相辅相成的。（没有谁好谁坏，只是有些场景适合不适合。）

应用场景：
软件需求变更少；项目周期长；稳定性要强，环境要隔离独立（要保证开发一套环境，测试一套环境）。
如果整个系统需求变更多，只能抽取部分功能做自动化测试。需求变更少的话，也要看项目的周期长短，长的话可以考虑做自动化测试，短的话就算了。

语言选择：
     Python、Php、Java、ruby
从个人角度出发：建议开发和测试用不同的语言工作。
目的：打造自己的唯一性。

从团队角度出发：建议用相同的语言，更方便团队工作交流。